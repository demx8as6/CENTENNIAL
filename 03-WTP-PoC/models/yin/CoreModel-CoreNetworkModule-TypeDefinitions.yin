<?xml version="1.0" encoding="UTF-8"?>
<module name="CoreModel-CoreNetworkModule-TypeDefinitions"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:CoreModel-CoreNetworkModule-TypeDefinitions="uri:onf:CoreModel-CoreNetworkModule-TypeDefinitions">
  <namespace uri="uri:onf:CoreModel-CoreNetworkModule-TypeDefinitions"/>
  <prefix value="CoreModel-CoreNetworkModule-TypeDefinitions"/>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-07-01">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <grouping name="Q_822_numSuppressedIntervalsPkg">
    <leaf name="numSuppressedIntervals">
      <type name="int64"/>
    </leaf>
  </grouping>
  <grouping name="Q_822_historyDataMeasurementListPkg">
    <leaf name="cTPId">
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="Q_822_historyDataSuspectIntervalFlagPkg">
    <leaf name="cTPId">
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="Q_822_observedManagedObjectPkg">
    <leaf name="observedObjectClass">
      <type name="string"/>
    </leaf>
    <leaf name="observedObjectInstance">
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="Q_822_objectDeleteNotificationPkg">
    <leaf name="cTPId">
      <type name="string"/>
    </leaf>
  </grouping>
  <typedef name="OperType">
    <description>
      <text>The operation type associated with the protection mechanism (either non-revertive or revertive).</text>
    </description>
    <type name="enumeration">
      <enum name="REVERTIVE"/>
      <enum name="NON-REVERTIVE"/>
    </type>
  </typedef>
  <typedef name="LayerProtocolName">
    <description>
      <text>Provides a controlled list of layer protocol names and indicates the naming authority.
Note that it is expected that attributes will be added to this structure to convey the naming authority name, the name of the layer protocol using a human readable string and any particular standard reference.
Layer protocol names include:
-    Layer 1 (L1): OTU, ODU
-    Layer 2 (L2): Carrier Grade Ethernet (ETY, ETH), MPLS-TP (MT)
lifecycle:Preliminary</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="PortRole">
    <description>
      <text>The role of a port in the context of the function of the forwarding entity that it bounds
lifecycle:Preliminary</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="PortDirection">
    <description>
      <text>The orientation of flow at the Port of a Forwarding entity</text>
    </description>
    <type name="enumeration">
      <enum name="BIDIRECTIONAL"/>
      <enum name="INPUT"/>
      <enum name="OUTPUT"/>
      <enum name="UNIDENTIFIED_OR_UNKNOWN"/>
    </type>
  </typedef>
  <typedef name="ForwardingDirection">
    <description>
      <text>The directionality of a Forwarding entity.</text>
    </description>
    <type name="enumeration">
      <enum name="BIDIRECTIONAL"/>
      <enum name="UNIDIRECTIONAL"/>
      <enum name="UNDEFINED_OR_UNKNOWN"/>
    </type>
  </typedef>
  <typedef name="TerminationDirection">
    <description>
      <text>The directionality of a termination entity</text>
    </description>
    <type name="enumeration">
      <enum name="BIDIRECTIONAL"/>
      <enum name="SINK"/>
      <enum name="SOURCE"/>
      <enum name="UNDEFINED_OR_UNKNOWN"/>
    </type>
  </typedef>
  <typedef name="ExtendedTerminationDirection">
    <description>
      <text>Extended to include contra-direction considerations. Only applies to LP and elements of LP not to LTP??
lifecycle:Experimental</text>
    </description>
    <type name="enumeration">
      <enum name="BIDIRECTIONAL"/>
      <enum name="SINK"/>
      <enum name="SOURCE"/>
      <enum name="UNDEFINED_OR_UNKNOWN"/>
      <enum name="CONTRA_DIRECTION_SINK"/>
      <enum name="CONTRA_DIRECTION_SOURCE"/>
    </type>
  </typedef>
  <typedef name="ProtectionType">
    <description>
      <text>Identifies the type of rotection of an FcSwitch.
lifecycle:Experimental</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="TerminationState">
    <description>
      <text>Provides support for the range of behaviours and specific states that an LP can take with respect to termination of the signal.
Indicates to what degree the LayerTermination is terminated.
lifecycle:Experimental</text>
    </description>
    <type name="enumeration">
      <enum name="LP_CAN_NEVER_TERMINATE"/>
      <enum name="LT_NOT_TERMINATED"/>
      <enum name="TERMINATED_SERVER_TO_CLIENT_FLOW"/>
      <enum name="TERMINATED_CLIENT_TO_SERVER_FLOW"/>
      <enum name="TERMINATED_BIDIRECTIONAL"/>
      <enum name="LT_PERMENANTLY_TERMINATED"/>
      <enum name="TERMINATION_STATE_UNKNOWN"/>
    </type>
  </typedef>
</module>
