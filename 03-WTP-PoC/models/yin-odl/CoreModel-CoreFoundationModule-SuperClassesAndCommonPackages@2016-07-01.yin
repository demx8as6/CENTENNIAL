<?xml version="1.0" encoding="UTF-8"?>
<module name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns:CoreModel-CoreFoundationModule-StateModel="uri:onf:CoreModel-CoreFoundationModule-StateModel">
  <namespace uri="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  <prefix value="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  <import module="CoreModel-CoreFoundationModule-StateModel">
    <prefix value="CoreModel-CoreFoundationModule-StateModel"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-07-01">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <grouping name="Name">
    <description>
      <text>Name: A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.</text>
    </description>
    <list name="nameList">
      <description>
        <text>List of names.</text>
      </description>
      <key value="valueName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NameAndValue"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="GlobalClass">
    <description>
      <text>Represents a type of thing (an Entity) that has instances which can exist in their own right (independently of any others).
Entity: Has identity, defined boundary, properties, functionality and lifecycle in a global context.
(consider in the context of an Object Class: (usage) The representation of a thing that may be an entity or an inseparable Entity Feature)</text>
    </description>
    <uses name="Name"/>
    <uses name="CoreModel-CoreFoundationModule-StateModel:State_Pac"/>
    <list name="localIdList">
      <description>
        <text>An identifier that is unique in the context of some scope that is less than the global scope.
(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself unique, and immutable. The identifier therefore represents the identity of the entity/role. An identifier carries no semantics with respect to the purpose of the entity.)</text>
      </description>
      <key value="valueName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NameAndValue"/>
    </list>
    <leaf name="uuid">
      <type name="UniversalId"/>
      <description>
        <text>UUID: An identifier that is universally unique
(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself globally unique, and immutable. An identifier carries no semantics with respect to the purpose or state of the entity)</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="LocalClass">
    <description>
      <text>A LocalClass represents a Feature of an Entity. It is inseparable from a GlobalClass but is a distinct feature of that GlobalClass such that the instances of LocalClass are able to have associations to other instances..
Feature of an Entity: An inseparable, externally distinguishable part of an entity.
The mandatory LocalId of the LocalClass instance is unique in the context of the GlobalClass from which it is inseparable.
(consider in the context of an Object Class: (usage) The representation of a thing that may be an entity or an inseparable feature of an entity)
</text>
    </description>
    <uses name="Name"/>
    <leaf name="uuid">
      <type name="UniversalId"/>
      <description>
        <text>A global identifier for the LocalClass, which should be used as reference.</text>
      </description>
    </leaf>
    <list name="localIdList">
      <description>
        <text>An identifier that is unique in the context of some scope that is less than the global scope.
(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself unique, and immutable. The identifier therefore represents the identity of the entity/role. An identifier carries no semantics with respect to the purpose of the entity.)</text>
      </description>
      <key value="valueName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NameAndValue"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="Label">
    <description>
      <text>A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.</text>
    </description>
    <list name="labelList">
      <description>
        <text>List of labels.</text>
      </description>
      <key value="valueName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NameAndValue"/>
    </list>
  </grouping>
  <grouping name="Extension">
    <description>
      <text>Extension provides an opportunity to define properties not declared in the class that extend the class enabling a realization with simple ad-hoc extension of standard classes to be conformant.</text>
    </description>
    <list name="extensionList">
      <description>
        <text>List of simple name-value extentions</text>
      </description>
      <key value="valueName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NameAndValue"/>
    </list>
  </grouping>
  <grouping name="UniversalIdAuthority">
    <description>
      <text>Represents the authority that controls the allocation of UUIDs.
lifecycle:Preliminary</text>
    </description>
    <leaf name="uuid">
      <type name="UniversalId"/>
      <description>
        <text>The UUID for the UUID authority.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="NameAndValueAuthority">
    <description>
      <text>Represents the authority that controls the legal valuse for the names and values of a name/value attribute.
lifecycle:Preliminary</text>
    </description>
    <leaf name="uuid">
      <type name="UniversalId"/>
      <description>
        <text>The UUID for the NameValueAuthority.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="ConditionalPackage">
    <description>
      <text>The base class for conditional packages.
lifecycle:Experimental</text>
    </description>
    <uses name="Extension"/>
    <uses name="Label"/>
  </grouping>
  <grouping name="NameAndValue">
    <description>
      <text>A scoped name-value pair</text>
    </description>
    <leaf name="valueName">
      <type name="string"/>
      <description>
        <text>The name of the value. The value need not have a name.</text>
      </description>
    </leaf>
    <leaf name="value">
      <type name="string"/>
      <description>
        <text>The value</text>
      </description>
    </leaf>
  </grouping>
  <typedef name="UniversalId">
    <description>
      <text>The univeral ID value where the mechanism for generation is defned by some authority not directly referenced in the structure.</text>
    </description>
    <type name="string"/>
  </typedef>
</module>
